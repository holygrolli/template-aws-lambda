on:
  push:
    paths:
      - '.github/workflows/aws-base.yml'
      - 'cfn/aws-base*.yml'
    branches:
      - main
      - master
  workflow_dispatch:

name: Deploy basic AWS infrastructure

jobs:
  infra:
    name: Infra setup
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Define slug variables
        uses: rlespinasse/github-slug-action@v4
      - name: Deploy certificate to us-east-1
        id: deploy-cert
        env:
          AWS_REGION: us-east-1
          S3_BUCKET: ${{ secrets.S3_ARTIFACT_BUCKET }}
          STACK_NAME: ${{ env.GITHUB_REPOSITORY_NAME_PART }}
        working-directory: ./cfn
        run: |
          echo using STACK_NAME ${{ env.STACK_NAME }}
          aws cloudformation package --template aws-base-cert.yml --s3-bucket $S3_BUCKET --s3-prefix ${{ env.GITHUB_REPOSITORY_NAME_PART }} --output-template template-base-cert-export.yml
          aws cloudformation deploy  --template-file=template-base-cert-export.yml --stack-name="${{ env.STACK_NAME }}" --capabilities=CAPABILITY_NAMED_IAM --parameter-overrides ParamDomainName=${{ secrets.AWS_API_DOMAINNAME}}
          export AWS_CERT_ARN=$(aws cloudformation describe-stacks --stack-name="${{ env.STACK_NAME }}" | jq -r '.Stacks | .[0] | .Outputs[] | select(.OutputKey=="CertArn") | .OutputValue')
          echo "AWS_CERT_ARN=${AWS_CERT_ARN}" >> $GITHUB_ENV
      - name: Deploy Custom Domain
        id: deploy
        env:
          S3_BUCKET: ${{ secrets.S3_ARTIFACT_BUCKET }}
          STACK_NAME: ${{ env.GITHUB_REPOSITORY_NAME_PART }}
        working-directory: ./cfn
        run: |
          echo using STACK_NAME ${{ env.STACK_NAME }}
          aws cloudformation package --template aws-base.yml --s3-bucket $S3_BUCKET --s3-prefix ${{ env.GITHUB_REPOSITORY_NAME_PART }} --output-template template-base-export.yml
          aws cloudformation deploy  --template-file=template-base-export.yml --stack-name="${{ env.STACK_NAME }}" --capabilities=CAPABILITY_NAMED_IAM --parameter-overrides ParamDomainName=${{ secrets.AWS_API_DOMAINNAME}} ParamCertArn=${{ env.AWS_CERT_ARN}}
